apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: "kotlin-kapt"
apply plugin: "dagger.hilt.android.plugin"

android {
    compileSdkVersion 31
    buildToolsVersion "30.0.3"
    buildFeatures {
        compose true
    }
    defaultConfig {
        applicationId "com.example.protosuite"
        minSdkVersion 24
        targetSdkVersion 31
        vectorDrawables.useSupportLibrary = true
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            // Enables code shrinking, obfuscation, and optimization for only
            // your project's release build type.
            minifyEnabled true

            // Enables resource shrinking, which is performed by the
            // Android Gradle plugin.
            shrinkResources true

            // Includes the default ProGuard rules files that are packaged with
            // the Android Gradle plugin. To learn more, go to the section about
            // R8 configuration files.
            proguardFiles getDefaultProguardFile(
                    'proguard-android-optimize.txt'),
                    'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = "11"
    }
    composeOptions {
        kotlinCompilerExtensionVersion "1.0.2"
    }
}

dependencies {
    def room_version = "2.4.0-alpha05"
    def lifecycle_version = "2.3.1"
    def hilt_version = '2.39.1'
    def compose_version = '1.0.3'
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    // Activity for Kotlin
    implementation "androidx.activity:activity-ktx:1.3.1"

    // Google Ads
    implementation 'com.google.android.gms:play-services-ads:20.4.0'

    // Fragments for Kotlin
    //implementation "androidx.fragment:fragment-ktx:1.3.6"

    // I use this for screen size and shape metrics
    implementation "androidx.window:window:1.0.0-beta02"

    // Lifecycle Components
    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"

    // Room Component
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    // Preferences DataStore
    implementation "androidx.datastore:datastore:1.0.0"

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2-native-mt'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2-native-mt'

    // New Material Design
    implementation "com.google.android.material:material:1.4.0"

    // Androidx Preferences
    implementation 'androidx.preference:preference-ktx:1.1.1'

    // Compose Compiler
    implementation "androidx.compose.compiler:compiler:$compose_version"
    // Compose UI
    implementation "androidx.compose.ui:ui:$compose_version"
    // Tooling support (Previews, etc.)
    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    // Foundation (Border, Background, Box, Image, Scroll, shapes, animations, etc.)
    implementation "androidx.compose.foundation:foundation:$compose_version"
    // Compose Animations
    implementation "androidx.compose.animation:animation:$compose_version"
    // Material Design
    implementation "androidx.compose.material:material:$compose_version"
    // Material design icons
    implementation "androidx.compose.material:material-icons-core:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    // Integration with activities
    implementation 'androidx.activity:activity-compose:1.3.1'
    // Integration with ViewModels
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.4.0-rc01'
    // Integration with observables
    implementation "androidx.compose.runtime:runtime:$compose_version"
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"
    implementation "androidx.compose.runtime:runtime-rxjava2:$compose_version"
    // Compose Navigation Integration
    implementation "androidx.navigation:navigation-compose:2.4.0-alpha10"
    implementation "androidx.navigation:navigation-common:2.4.0-alpha10"

    // Accompanist to add pager similar to viewpager for my tab layout
    implementation 'com.google.accompanist:accompanist-pager:0.19.0'
    implementation 'com.google.accompanist:accompanist-pager-indicators:0.19.0'

    // UI Tests
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"

    // Dagger - Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    //implementation 'androidx.hilt:hilt-navigation-fragment:1.0.0'
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0-alpha03'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // debugImplementation because LeakCanary should only run in debug builds.
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.7'

}

kapt {
    correctErrorTypes true
    arguments {
        arg("room.schemaLocation", "$projectDir/schemas".toString())
    }
}
