apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "com.google.devtools.ksp"
apply plugin: "dagger.hilt.android.plugin"
apply plugin: 'org.jetbrains.kotlin.plugin.compose'

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    compileSdk 35
    buildFeatures {
        compose true
    }
    defaultConfig {
        applicationId "com.augustbyrne.tas"
        minSdkVersion 26
        targetSdkVersion 35
        versionCode 34
        versionName "1.9.3"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation": "$projectDir/schemas".toString()
                ]
            }
        }
    }
    buildTypes {
        release {
            // Enables code shrinking, obfuscation, and optimization for only
            // your project's release build type.
            minifyEnabled true

            // Enables resource shrinking, which is performed by the
            // Android Gradle plugin.
            shrinkResources true

            // Includes the default ProGuard rules files that are packaged with
            // the Android Gradle plugin. To learn more, go to the section about
            // R8 configuration files.
            proguardFiles getDefaultProguardFile(
                    'proguard-android-optimize.txt'),
                    'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = "17"
    }
    composeOptions {
        kotlinCompilerExtensionVersion "1.5.15"
    }
    packagingOptions {
        resources.excludes += "DebugProbesKt.bin"
    }
    namespace 'com.augustbyrne.tas'
}

dependencies {
    def room_version = '2.6.1'
    def lifecycle_version = '2.8.7'
    def hilt_version = '2.54'
//    def compose_version = '1.7.6'
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.15.0'
    implementation 'androidx.appcompat:appcompat:1.7.0'

    // Activity for Kotlin
    implementation 'androidx.activity:activity-ktx:1.9.3'

    // Lifecycle Components
    // Service
    implementation "androidx.lifecycle:lifecycle-service:$lifecycle_version"
    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"

    // Room Component
    implementation "androidx.room:room-runtime:$room_version"
    ksp "androidx.room:room-compiler:$room_version"
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    // Preferences DataStore
    implementation "androidx.datastore:datastore-preferences:1.1.1"

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.10.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.10.1'

    // Material Design
    implementation 'com.google.android.material:material:1.12.0'

    // Compose Compiler
    implementation 'androidx.compose.compiler:compiler:1.5.15'

    // Compose BOM
    implementation platform('androidx.compose:compose-bom:2024.12.01')
    // Compose UI
    implementation "androidx.compose.ui:ui"
    // Tooling support (Previews, etc.)
    implementation "androidx.compose.ui:ui-tooling"
    // Foundation (Border, Background, Box, Image, Scroll, shapes, animations, etc.)
    implementation "androidx.compose.foundation:foundation"
    // Compose Animations
    implementation "androidx.compose.animation:animation"
    // Compose Material 3 Components
    implementation 'androidx.compose.material3:material3'
    // Material design icons
    implementation "androidx.compose.material:material-icons-core"
    implementation "androidx.compose.material:material-icons-extended"
    // Integration with observables
    implementation "androidx.compose.runtime:runtime"
    implementation "androidx.compose.runtime:runtime-livedata"

    // Integration with activities
    implementation 'androidx.activity:activity-compose:1.9.3'
    // Integration with ViewModels
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"
    // Compose Navigation Integration
    implementation 'androidx.navigation:navigation-compose:2.8.5'
    implementation 'androidx.navigation:navigation-common:2.8.5'

    // Accompanist Components (temp)
    implementation 'com.google.accompanist:accompanist-systemuicontroller:0.36.0'

    // UI Tests
    //androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"

    // Dagger - Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    ksp "com.google.dagger:hilt-compiler:$hilt_version"
    ksp "com.google.dagger:hilt-android-compiler:$hilt_version"
    //implementation 'androidx.hilt:hilt-navigation-fragment:1.0.0'
    implementation 'androidx.hilt:hilt-navigation-compose:1.2.0'

    // A Jetpack Compose modifier enabling reordering in a LazyList
    // DON'T UPDATE! REQUIRES TOTAL REORDERABLE REMAKE.
    implementation("org.burnoutcrew.composereorderable:reorderable:0.9.6")

    //testImplementation 'junit:junit:4.13.2'
    //androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    //androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // debugImplementation because LeakCanary should only run in debug builds.
    // Requires Jetifier
    //debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.7'

}

